/*
	SQLSTUDIOADVANCEDTag_Result.h
	The implementation of properties and methods for the SQLSTUDIOADVANCEDTag_Result object.
	Generated by SudzC.com
*/
#import "SQLSTUDIOADVANCEDTag_Result.h"

@implementation SQLSTUDIOADVANCEDTag_Result
	@synthesize Customer_ID = _Customer_ID;
	@synthesize CylinderTypeName = _CylinderTypeName;
	@synthesize Cylinder_Status = _Cylinder_Status;
	@synthesize Cylinder_Type = _Cylinder_Type;
	@synthesize Lot_Number = _Lot_Number;
	@synthesize Owner_Code = _Owner_Code;
	@synthesize Owner_Number = _Owner_Number;
	@synthesize Pressure_Test_Date = _Pressure_Test_Date;
	@synthesize Serial_Number = _Serial_Number;
	@synthesize Tag_ID = _Tag_ID;
	@synthesize tagID = _tagID;

	- (id) init
	{
		if(self = [super init])
		{
			self.CylinderTypeName = nil;
			self.Cylinder_Status = nil;
			self.Lot_Number = nil;
			self.Owner_Number = nil;
			self.Pressure_Test_Date = nil;
			self.Serial_Number = nil;
			self.tagID = nil;

		}
		return self;
	}

	+ (SQLSTUDIOADVANCEDTag_Result*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[self alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Customer_ID = [[Soap getNodeValue: node withName: @"Customer_ID"] intValue];
			self.CylinderTypeName = [Soap getNodeValue: node withName: @"CylinderTypeName"];
			self.Cylinder_Status = [Soap getNodeValue: node withName: @"Cylinder_Status"];
			self.Cylinder_Type = [[Soap getNodeValue: node withName: @"Cylinder_Type"] intValue];
			self.Lot_Number = [Soap getNodeValue: node withName: @"Lot_Number"];
			self.Owner_Code = [[Soap getNodeValue: node withName: @"Owner_Code"] intValue];
			self.Owner_Number = [Soap getNodeValue: node withName: @"Owner_Number"];
			self.Pressure_Test_Date = [Soap dateFromString: [Soap getNodeValue: node withName: @"Pressure_Test_Date"]];
			self.Serial_Number = [Soap getNodeValue: node withName: @"Serial_Number"];
			self.Tag_ID = [[Soap getNodeValue: node withName: @"Tag_ID"] intValue];
			self.tagID = [Soap getNodeValue: node withName: @"tagID"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Tag_Result"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<Customer_ID>%@</Customer_ID>", [NSString stringWithFormat: @"%i", self.Customer_ID]];
		if (self.CylinderTypeName != nil) [s appendFormat: @"<CylinderTypeName>%@</CylinderTypeName>", [[self.CylinderTypeName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Cylinder_Status != nil) [s appendFormat: @"<Cylinder_Status>%@</Cylinder_Status>", [[self.Cylinder_Status stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Cylinder_Type>%@</Cylinder_Type>", [NSString stringWithFormat: @"%i", self.Cylinder_Type]];
		if (self.Lot_Number != nil) [s appendFormat: @"<Lot_Number>%@</Lot_Number>", [[self.Lot_Number stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Owner_Code>%@</Owner_Code>", [NSString stringWithFormat: @"%i", self.Owner_Code]];
		if (self.Owner_Number != nil) [s appendFormat: @"<Owner_Number>%@</Owner_Number>", [[self.Owner_Number stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Pressure_Test_Date != nil) [s appendFormat: @"<Pressure_Test_Date>%@</Pressure_Test_Date>", [Soap getDateString: self.Pressure_Test_Date]];
		if (self.Serial_Number != nil) [s appendFormat: @"<Serial_Number>%@</Serial_Number>", [[self.Serial_Number stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Tag_ID>%@</Tag_ID>", [NSString stringWithFormat: @"%i", self.Tag_ID]];
		if (self.tagID != nil) [s appendFormat: @"<tagID>%@</tagID>", [[self.tagID stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SQLSTUDIOADVANCEDTag_Result class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
