/*
	SQLSTUDIOADVANCEDtbl_Customer_Result.h
	The implementation of properties and methods for the SQLSTUDIOADVANCEDtbl_Customer_Result object.
	Generated by SudzC.com
*/
#import "SQLSTUDIOADVANCEDtbl_Customer_Result.h"

@implementation SQLSTUDIOADVANCEDtbl_Customer_Result
	@synthesize Account_Number = _Account_Number;
	@synthesize CityState = _CityState;
	@synthesize Code = _Code;
	@synthesize Company_ID = _Company_ID;
	@synthesize Company_Letter = _Company_Letter;
	@synthesize Country = _Country;
	@synthesize Customer_Address = _Customer_Address;
	@synthesize Customer_Address_2 = _Customer_Address_2;
	@synthesize Customer_ID = _Customer_ID;
	@synthesize Customer_Name = _Customer_Name;
	@synthesize Latitude = _Latitude;
	@synthesize Longitude = _Longitude;
	@synthesize Password = _Password;
	@synthesize Phone = _Phone;
	@synthesize Zip = _Zip;
	@synthesize Zip_4 = _Zip_4;
	@synthesize ssImage_Logo = _ssImage_Logo;

	- (id) init
	{
		if(self = [super init])
		{
			self.Account_Number = nil;
			self.CityState = nil;
			self.Company_Letter = nil;
			self.Customer_Address = nil;
			self.Customer_Address_2 = nil;
			self.Customer_Name = nil;
			self.Latitude = nil;
			self.Longitude = nil;
			self.Password = nil;
			self.Phone = nil;
			self.Zip = nil;
			self.Zip_4 = nil;
			self.ssImage_Logo = nil;

		}
		return self;
	}

	+ (SQLSTUDIOADVANCEDtbl_Customer_Result*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[self alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Account_Number = [Soap getNodeValue: node withName: @"Account_Number"];
			self.CityState = [Soap getNodeValue: node withName: @"CityState"];
			self.Code = [[Soap getNodeValue: node withName: @"Code"] intValue];
			self.Company_ID = [[Soap getNodeValue: node withName: @"Company_ID"] intValue];
			self.Company_Letter = [Soap getNodeValue: node withName: @"Company_Letter"];
			self.Country = [[Soap getNodeValue: node withName: @"Country"] intValue];
			self.Customer_Address = [Soap getNodeValue: node withName: @"Customer_Address"];
			self.Customer_Address_2 = [Soap getNodeValue: node withName: @"Customer_Address_2"];
			self.Customer_ID = [[Soap getNodeValue: node withName: @"Customer_ID"] intValue];
			self.Customer_Name = [Soap getNodeValue: node withName: @"Customer_Name"];
			self.Latitude = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"Latitude"]];
			self.Longitude = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"Longitude"]];
			self.Password = [Soap getNodeValue: node withName: @"Password"];
			self.Phone = [Soap getNodeValue: node withName: @"Phone"];
			self.Zip = [Soap getNodeValue: node withName: @"Zip"];
			self.Zip_4 = [Soap getNodeValue: node withName: @"Zip_4"];
			self.ssImage_Logo = [Soap getNodeValue: node withName: @"ssImage_Logo"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"tbl_Customer_Result"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Account_Number != nil) [s appendFormat: @"<Account_Number>%@</Account_Number>", [[self.Account_Number stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CityState != nil) [s appendFormat: @"<CityState>%@</CityState>", [[self.CityState stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Code>%@</Code>", [NSString stringWithFormat: @"%i", self.Code]];
		[s appendFormat: @"<Company_ID>%@</Company_ID>", [NSString stringWithFormat: @"%i", self.Company_ID]];
		if (self.Company_Letter != nil) [s appendFormat: @"<Company_Letter>%@</Company_Letter>", [[self.Company_Letter stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Country>%@</Country>", [NSString stringWithFormat: @"%i", self.Country]];
		if (self.Customer_Address != nil) [s appendFormat: @"<Customer_Address>%@</Customer_Address>", [[self.Customer_Address stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Customer_Address_2 != nil) [s appendFormat: @"<Customer_Address_2>%@</Customer_Address_2>", [[self.Customer_Address_2 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Customer_ID>%@</Customer_ID>", [NSString stringWithFormat: @"%i", self.Customer_ID]];
		if (self.Customer_Name != nil) [s appendFormat: @"<Customer_Name>%@</Customer_Name>", [[self.Customer_Name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Latitude != nil) [s appendFormat: @"<Latitude>%@</Latitude>", [NSString stringWithFormat: @"%@", self.Latitude]];
		if (self.Longitude != nil) [s appendFormat: @"<Longitude>%@</Longitude>", [NSString stringWithFormat: @"%@", self.Longitude]];
		if (self.Password != nil) [s appendFormat: @"<Password>%@</Password>", [[self.Password stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Phone != nil) [s appendFormat: @"<Phone>%@</Phone>", [[self.Phone stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Zip != nil) [s appendFormat: @"<Zip>%@</Zip>", [[self.Zip stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Zip_4 != nil) [s appendFormat: @"<Zip_4>%@</Zip_4>", [[self.Zip_4 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ssImage_Logo != nil) [s appendFormat: @"<ssImage_Logo>%@</ssImage_Logo>", [[self.ssImage_Logo stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SQLSTUDIOADVANCEDtbl_Customer_Result class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
